{"version":3,"sources":["components/Notification.js","components/Togglable.js","components/NewBlog.js","components/Users.js","components/User.js","components/BlogData.js","utils/storage.js","services/blogs.js","services/login.js","services/users.js","App.js","index.js"],"names":["Notification","notification","type","Alert","severity","message","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","variant","onClick","buttonLabel","Grid","container","spacing","item","xs","className","children","color","displayName","NewBlog","title","setTitle","author","setAuthor","url","setUrl","onSubmit","event","preventDefault","createBlog","TextField","id","value","label","onChange","target","Users","users","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","user","to","name","blogs","length","User","undefined","blog","BlogData","handleLike","addComment","comment","setComment","href","likes","comments","storageKey","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","baseUrl","getConfig","headers","Authorization","storage","token","axios","get","then","response","data","post","put","login","credentials","a","BasicView","setBlogs","setUser","username","setUsername","password","setPassword","setNotification","blogFormRef","createRef","useEffect","blogService","notifyWith","setTimeout","handleLogin","loginService","newBlog","current","concat","console","log","sort","b1","b2","App","setUsers","userService","loggedInUser","setLoggedInUser","loggedIn","matchForUser","useRouteMatch","find","String","params","matchForBlog","blogToLike","b","likedBlog","blogToAddComment","commentedBlog","Container","AppBar","position","background","Toolbar","Link","justifyContent","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10664fc4.chunk.js","sourcesContent":["import React from 'react'\nimport { Alert } from '@mui/material'\n\nconst Notification = ({ notification }) => {\n  if (!notification) {\n    return null\n  }\n\n  if (notification.type === 'success') {\n    return (\n      <div>\n        <Alert severity=\"success\"> {notification.message}</Alert>\n        <br></br>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Alert severity=\"error\"> {notification.message}</Alert>\n        <br></br>\n      </div>\n    )\n  }\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\nimport { Button, Grid } from '@mui/material'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button variant=\"contained\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={10}>\n          <div style={showWhenVisible} className=\"togglableContent\">\n            {props.children}\n            <p></p>\n            <Button variant=\"contained\" color=\"error\" onClick={toggleVisibility}>cancel</Button>\n          </div>\n        </Grid>\n      </Grid >\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\nimport { TextField, Button, Grid } from '@mui/material'\n\nconst NewBlog = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleNewBlog = (event) => {\n    event.preventDefault()\n\n    props.createBlog({\n      title, author, url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Create new blog:</h2>\n      <form onSubmit={handleNewBlog}>\n\n        <Grid container spacing={1}>\n          <Grid item xs={3}>\n            <div>\n              <TextField id=\"outlined-basic\" value={author} label=\"author\" variant=\"outlined\" onChange={({ target }) => setAuthor(target.value)} />\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div>\n              <TextField id=\"outlined-basic\" value={title} label=\"title\" variant=\"outlined\" onChange={({ target }) => setTitle(target.value)} />\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div>\n              <TextField id=\"outlined-basic\" value={url} label=\"url\" variant=\"outlined\" onChange={({ target }) => setUrl(target.value)} />\n            </div>\n          </Grid>\n        </Grid>\n        <br></br>\n        <Button variant=\"contained\" type='submit' id=\"create\">create</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBlog","import React from 'react'\nimport {\n  Link\n} from 'react-router-dom'\nimport { Paper, TableContainer, Table, TableBody, TableCell, TableRow, TableHead } from '@mui/material'\n\n\nconst Users = ({ users }) => {\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table>\n\n          <TableHead>\n            <TableRow>\n              <TableCell>User</TableCell>\n              <TableCell>Blogs created</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {users.map(user => (\n              <TableRow key={user.id}>\n                <TableCell>\n                  <Link to={`/user/${user.id}`}>{user.name}</Link>\n                </TableCell>\n                <TableCell>\n                  {user.blogs.length}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\nexport default Users","import React from 'react'\nimport { Paper, TableContainer, Table, TableBody, TableCell, TableRow, TableHead } from '@mui/material'\n\nconst User = ({ user }) => {\n\n  if (user === undefined) {\n    return null\n  }\n\n  const blogs = user.blogs\n\n  return (\n    <div>\n      <br></br>\n      <TableContainer component={Paper}>\n        <Table>\n\n          <TableHead>\n            <TableRow>\n              <TableCell>User {user.name} has added blogs</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {blogs.map(blog => (\n              <TableRow key={blog.id}>\n                <TableCell>\n                  {blog.title}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\nexport default User","import React, { useState } from 'react'\nimport { Paper, TableContainer, Table, TableBody, TableCell, TableRow, TableHead, TextField, Button } from '@mui/material'\n\n\nconst BlogData = ({ blog, handleLike, addComment }) => {\n\n  const [comment, setComment] = useState('')\n\n  const handleNewComment = (event) => {\n    event.preventDefault()\n    const id = blog.id\n\n    addComment(id, comment)\n    setComment('')\n  }\n\n  if (blog === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>{blog.title} added by {blog.user.name}</h1>\n      <h4>url: <a href={blog.url}>{blog.url}</a> </h4>\n      <h4>likes: {blog.likes}  </h4>\n      <Button variant=\"contained\" onClick={() => handleLike(blog.id)}>like</Button>\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <form onSubmit={handleNewComment}>\n        <div>\n          <h3>Add new comment</h3>\n          <TextField id=\"outlined-basic\"variant=\"outlined\" value={comment} onChange={({ target }) => setComment(target.value)} />\n        </div>\n        <div>\n          <br></br>\n          <Button variant=\"contained\" type='submit' id=\"addComment\">Send </Button>\n          <br></br>\n          <br></br>\n          <br></br>\n        </div>\n      </form>\n\n\n      <br></br>\n\n      <TableContainer component={Paper}>\n        <Table>\n\n          <TableHead>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {blog.comments.map(comment => (\n              <TableRow key={blog.id}>\n                <TableCell>\n                  {comment}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\nexport default BlogData","const storageKey = 'loggedBlogAppUser'\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n  JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n  localStorage.removeItem(storageKey)\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser\n}","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/blogs'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (blog) => {\n  const request = axios.post(baseUrl, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst addComment = (id, comment) => {\n\n  const request = axios.put(`${baseUrl}/${id}/comments`, { id, comment }, getConfig())\n  return request.then(response => response.data)\n}\n\nconst update = (blog) => {\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig())\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove, addComment }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\nimport Users from './components/Users'\nimport User from './components/User'\nimport BlogData from './components/BlogData'\nimport { AppBar, Toolbar, Button, Paper, TableContainer, Table, TableBody, TableCell, TableRow, TableHead, TextField } from '@mui/material'\nimport Container from '@material-ui/core/Container'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/users'\n\nimport {\n  Switch, Route, useRouteMatch, Link\n} from 'react-router-dom'\n\nimport storage from './utils/storage'\n\n\n\nconst App = () => {\n\n  const [users, setUsers] = useState([])\n  const [blogs, setBlogs] = useState([])\n\n\n  useEffect(() => {\n    userService.getAll().then(users =>\n      setUsers(users)\n    )\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n\n  const [loggedInUser, setLoggedInUser] = useState(null)\n\n  useEffect(() => {\n    const loggedIn = storage.loadUser()\n    setLoggedInUser(loggedIn)\n  }, [])\n\n  const handleLogout = () => {\n    setLoggedInUser(null)\n    storage.logoutUser()\n  }\n\n\n\n  const matchForUser = useRouteMatch('/user/:id')\n  const user = matchForUser ? users.find(user => user.id === String(matchForUser.params.id)) : null\n\n  const matchForBlog = useRouteMatch('/blogs/:id')\n  const blog = matchForBlog ? blogs.find(blog => blog.id === String(matchForBlog.params.id)) : null\n\n  const handleLike = async (id) => {\n    const blogToLike = blogs.find(b => b.id === id)\n\n    if (blogToLike !== undefined) {\n      const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n      await blogService.update(likedBlog)\n      setBlogs(blogs.map(b => b.id === id ? { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n    }\n  }\n\n  const addComment = async (id, comment) => {\n\n    const blogToAddComment = blogs.find(b => b.id === id)\n    const commentedBlog = { ...blogToAddComment, comments: blogToAddComment.comments.concat(comment), user: blogToAddComment.user.id }\n    setBlogs(blogs.map(b => b.id === id ? { ...commentedBlog, comments: commentedBlog.comments.concat(comment) } : b))\n\n    await blogService.addComment(id, String(comment))\n  }\n\n\n  return (\n\n    <div>\n      <Container>\n        <AppBar position=\"static\" style={{ background: '#2E3B55' }}>\n\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">\n              Blogs\n            </Button>\n            <Button color=\"inherit\" component={Link} to=\"/users\">\n              Users\n            </Button>\n            <div style={{ justifyContent: 'flex-end' }}>\n              {loggedInUser\n                ? <em> {loggedInUser.name} logged in <Button color=\"inherit\" onClick={handleLogout}>logout</Button> </em>\n                : ''\n              } </div>\n          </Toolbar>\n        </AppBar>\n\n        <h1>Blog app</h1>\n        <Switch>\n          <Route path=\"/user/:id\">\n            <User user={user} />\n          </Route>\n          <Route path=\"/users\">\n            <Users users={users} />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogData blog={blog} handleLike={handleLike} addComment={addComment} />\n          </Route>\n          <Route path=\"/\">\n            <BasicView />\n          </Route>\n        </Switch>\n      </Container>\n    </div >\n  )\n}\n\n\n\nconst BasicView = () => {\n\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const user = storage.loadUser()\n    setUser(user)\n  }, [])\n\n  const notifyWith = (message, type = 'success') => {\n    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      notifyWith(`${user.name} welcome back!`)\n      storage.saveUser(user)\n    } catch (exception) {\n      notifyWith('wrong username/password', 'error')\n    }\n  }\n\n  const createBlog = async (blog) => {\n    try {\n      const newBlog = await blogService.create(blog)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(newBlog))\n      notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`)\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  /*\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(b => b.id === id)\n    const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n    if (ok) {\n      await blogService.remove(id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  } */\n\n  if (!user) {\n    return (\n      <div>\n\n        <h2>Login to application</h2>\n\n        <Notification notification={notification} />\n\n        <form onSubmit={handleLogin}>\n          <div>\n            <TextField id=\"outlined-basic\" variant=\"outlined\" label=\"Username\" value={username} onChange={({ target }) => setUsername(target.value)} />\n          </div>\n          <p></p>\n          <div>\n            <TextField id=\"outlined-basic\" variant=\"outlined\" label=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)} />\n          </div>\n          <br></br>\n          <Button variant=\"contained\" type='submit' >Login </Button>\n        </form>\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n\n      <Notification notification={notification} />\n\n      <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      <br></br>\n      <br></br>\n\n      <TableContainer component={Paper}>\n        <Table>\n\n          <TableHead>\n            <TableRow>\n              <TableCell>Blog</TableCell>\n              <TableCell>Author</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {blogs.sort(byLikes).map(blog => (\n              <TableRow key={blog.id}>\n                <TableCell>\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                </TableCell>\n                <TableCell>\n                  {blog.author}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'))"],"sourceRoot":""}
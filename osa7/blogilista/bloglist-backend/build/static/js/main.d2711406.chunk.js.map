{"version":3,"sources":["components/Blog.js","components/Togglable.js","components/BlogForm.js","services/blogs.js","services/login.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","addNewLike","deleteBlog","blogUserIsCurrentUser","useState","visibleAll","setVisibleAll","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","paddingTop","paddingLeft","paddingRigth","paddingBottom","border","borderWidth","marginBottom","margin","className","id","title","author","onClick","url","likes","displayName","Togglable","React","forwardRef","props","ref","visible","setVisible","useImperativeHandle","buttonLabel","children","BlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","value","onChange","target","type","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","updateLikes","put","setToken","newToken","delet","blogObject","delete","login","credentials","Notification","notification","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","positiveNotification","setPositiveNotification","errorNotification","setErrorNotification","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","clear","handleLogin","loginService","setItem","stringify","errorNotificationTime","addBlog","newBlog","concat","current","positiveNotificationTime","console","log","undefined","find","updated","map","p","Boolean","confirmed","confirm","newList","filter","setTimeout","name","sort","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2711406.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, addNewLike, deleteBlog, blogUserIsCurrentUser }) => {\n\n  const blogStyle = {\n    paddingTop: 15,\n    paddingLeft: 10,\n    paddingRigth: 10,\n    paddingBottom: 15,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 10,\n    margin: 5,\n  }\n\n  const [visibleAll, setVisibleAll] = useState(false)\n  const hideWhenVisible = { display: visibleAll ? 'none' : '' }\n  const showWhenVisible = { display: visibleAll ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisibleAll(!visibleAll)\n  }\n\n  return (\n    <div style={blogStyle} className='blogStyle'>\n      <div id='firstView' style={hideWhenVisible}>\n        {blog.title} {blog.author}\n        <button id='toggleVisibility' onClick={toggleVisibility}>view</button>\n      </div>\n      <div style={showWhenVisible} className=\"showAllBlogData\">\n        {blog.title} {blog.author} <button id='hideButton' onClick={toggleVisibility}>hide</button>\n        <p>{blog.url} </p>\n        <p>likes {blog.likes} <button id='likeButton' onClick={addNewLike}>like</button></p>\n        <p>{blog.author} </p>\n        <div>\n          {blogUserIsCurrentUser ? <button id='deleteButton' onClick={deleteBlog}>delete</button> : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nBlog.displayName = 'Blog'\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  //  addNewLike: PropTypes.func.isRequired,\n  //  deleteBlog: PropTypes.func.isRequired,\n  //  blogUserIsCurrentUser: PropTypes.bool.isRequired,\n}\n\nexport default Blog","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button id='createNew' onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    createBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n\n      <form onSubmit={addBlog}>\n        <div>\n          title:\n          <input id='title' value={title} onChange={handleTitleChange} />\n        </div>\n        <div>\n          author:\n          <input id='author' value={author} onChange={handleAuthorChange} />\n        </div>\n        <div>\n          url:\n          <input id='url' value={url} onChange={handleUrlChange} />\n        </div>\n        <button id='createBlogButton' type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n\n  return response.data\n}\n\nconst updateLikes = (newObject) => {\n\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst delet = (blogObject) => {\n\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${blogObject.id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  updateLikes,\n  setToken,\n  delet,\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notification = (props) => {\n\n  if (props.notification === null) {\n    return (\n      <div></div>\n    )\n  } else {\n    if (props.type === 'error') {\n      return (\n        <div className=\"error\">\n          <p>{props.notification}</p>\n        </div>)\n    } else {\n      return (\n        <div className=\"positive\">\n          <p>{props.notification}</p>\n        </div>)\n    }\n  }\n}\n\nexport default Notification","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\n\nimport './index.css'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [positiveNotification, setPositiveNotification] = useState(null)\n  const [errorNotification, setErrorNotification] = useState(null)\n  const blogFormRef = useRef()\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n\n    window.localStorage.removeItem('loggedBlogappUser')\n    window.localStorage.clear()\n\n    blogService.setToken(null)\n    setUser(null)\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    }\n    catch (exception) {\n\n      setErrorNotification('wrong username or password')\n      errorNotificationTime()\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n\n    try {\n      const newBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(newBlog))\n      blogFormRef.current.toggleVisibility()\n\n      setPositiveNotification(`A new blog ${blogObject.title} by ${blogObject.author} added`)\n      positiveNotificationTime()\n    }\n    catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  const addNewLike = async (blogObject) => {\n\n    if (blogObject !== undefined) {\n\n      const blog = blogs.find(blog => blog.id === blogObject.id)\n      const updated = { ...blog, likes: blog.likes + 1 }\n\n      try {\n        await blogService.updateLikes(updated)\n        setBlogs(blogs.map(p => p.id !== blog.id ? p : updated))\n      } catch (exception) {\n        console.log(exception)\n      }\n    }\n  }\n\n  const deleteBlog = async (blogObject) => {\n\n    var confirmed = new Boolean(false)\n    confirmed = window.confirm(`Remove blog ${blogObject.title} by ${blogObject.author}`)\n\n    if (blogObject !== undefined && confirmed) {\n\n      const blog = blogs.find(blog => blog.id === blogObject.id)\n\n      try {\n        await blogService.delet(blog)\n        const newList = (blogs.filter(blog => blog.id !== blogObject.id))\n        setBlogs(newList)\n      } catch (exception) {\n        console.log(exception)\n      }\n    }\n  }\n\n\n\n  const positiveNotificationTime = () => {\n    setTimeout(() => {\n      setPositiveNotification(null)\n    }, 3000)\n  }\n\n  const errorNotificationTime = () => {\n    setTimeout(() => {\n      setErrorNotification(null)\n    }, 3000)\n  }\n\n\n  const loginForm = () => (\n\n    <div>\n      <h2>Log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input id='username' type=\"text\" value={username} name=\"Username\" onChange={({ target }) =>\n            setUsername(target.value)} />\n        </div>\n        <div>\n          password\n          <input id='password' type=\"password\" value={password} name=\"Password\" onChange={({ target }) =>\n            setPassword(target.value)} />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n\n  const blogForm = () => (\n\n    <Togglable buttonLabel=\"create new\" ref={blogFormRef}>\n      <BlogForm\n        createBlog={addBlog}\n      />\n    </Togglable>\n  )\n\n  const blogUserIsCurrentUser = (blog) => {\n\n    if (blog.user !== undefined && user !== undefined && blog.user !== null && user !== null) {\n\n      if (blog.user.username === user.username) {\n        return true\n      }\n    }\n    return false\n  }\n\n\n  return (\n\n    <div>\n      <h2>Blogs</h2>\n      <p></p>\n      <p></p>\n      <Notification notification={positiveNotification} type={'positive'} />\n      <Notification notification={errorNotification} type={'error'} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p> {user.name} logged in <button onClick={handleLogout}>logout</button> </p>\n          {blogForm()}\n          <p></p>\n          {blogs\n            .sort((a, b) => b.likes - a.likes)\n            .map(blog =>\n              <Blog key={blog.id} blog={blog} addNewLike={() => addNewLike(blog)}\n                deleteBlog={() => deleteBlog(blog)} blogUserIsCurrentUser={blogUserIsCurrentUser(blog)} />\n            )}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
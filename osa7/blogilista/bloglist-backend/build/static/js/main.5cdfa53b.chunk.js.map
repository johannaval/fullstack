{"version":3,"sources":["components/Notification.js","components/Togglable.js","components/NewBlog.js","components/Users.js","components/User.js","components/BlogData.js","utils/storage.js","services/blogs.js","services/login.js","services/users.js","App.js","index.js"],"names":["Notification","notification","style","borderStyle","borderRadius","padding","color","type","background","message","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","className","children","displayName","NewBlog","title","setTitle","author","setAuthor","url","setUrl","onSubmit","event","preventDefault","createBlog","id","value","onChange","target","Users","users","map","user","to","name","blogs","length","User","undefined","blog","BlogData","handleLike","addComment","href","likes","comments","comment","content","storageKey","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","baseUrl","getConfig","headers","Authorization","storage","token","axios","get","then","response","data","post","put","login","credentials","a","BasicView","setBlogs","setUser","username","setUsername","password","setPassword","setNotification","blogFormRef","createRef","useEffect","blogService","notifyWith","setTimeout","handleLogin","loginService","newBlog","current","concat","console","log","sort","b1","b2","App","setUsers","userService","loggedInUser","setLoggedInUser","loggedIn","matchForUser","useRouteMatch","find","String","params","matchForBlog","blogToLike","b","likedBlog","blogToAddComment","commentedBlog","AppBar","position","Toolbar","Button","component","Link","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cdfa53b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if ( !notification ) {\n    return null\n  }\n\n  const style = {\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    color: notification.type === 'success' ? 'green' : 'red',\n    background: 'lightgrey'\n  }\n\n  return <div style={style}>\n    {notification.message}\n  </div>\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst NewBlog = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleNewBlog = (event) => {\n    event.preventDefault()\n\n    props.createBlog({\n      title, author, url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={handleNewBlog}>\n        <div>\n          author\n          <input\n            id='author'\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          title\n          <input\n            id='title'\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          url\n          <input\n            id='url'\n            value={url}\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button id=\"create\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBlog","import React from 'react'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst Users = ({ users }) => {\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <table>\n        <tr>\n          <td> </td>\n          <td> <b> blogs created </b> </td>\n        </tr>\n\n        {users.map(user => {\n          return (\n            <tr key={user.id}>\n              <td>\n                <div>\n                  <Link to= {`/user/${user.id}`}>{user.name}</Link>\n                </div>\n              </td>\n              <td> {user.blogs.length} </td>\n            </tr>\n          )})}\n      </table>\n    </div>\n  )\n}\nexport default Users","import React from 'react'\n\nconst User = ({ user }) => {\n\n  if (user === undefined) {\n    return null\n  }\n\n  const blogs = user.blogs\n\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <br></br>\n      <b>Added blogs</b>\n      <p></p>\n\n      {blogs.map(blog => {\n        return (\n          <li key = {blog.id}> {blog.title}</li>\n        )})}\n    </div>\n  )\n}\nexport default User","import React from 'react'\n\nconst BlogData = ({ blog, handleLike, addComment }) => {\n\n  if (blog === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>{blog.title}</h1>\n      <a href={blog.url}>{blog.url}</a>\n      <p>likes {blog.likes}\n        <button onClick={() => handleLike(blog.id)}>like</button> </p>\n      <p>added by {blog.user.name} </p>\n      <br></br>\n      <h3>Comments</h3>\n      {blog.comments.map(comment => {\n        return (\n          <li key = {comment.id}> {comment.content} </li>\n        )}\n      )}\n    </div>\n  )\n}\nexport default BlogData","const storageKey = 'loggedBlogAppUser'\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n  JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n  localStorage.removeItem(storageKey)\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser\n}","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/blogs'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (blog) => {\n  const request = axios.post(baseUrl, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst addComment = (id, comment) => {\n  const request = axios.put(baseUrl, id, comment)\n  return request.then(response => response.data)\n}\n\nconst update = (blog) => {\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig())\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove, addComment }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\nimport Users from './components/Users'\nimport User from './components/User'\nimport BlogData from './components/BlogData'\nimport { AppBar, Toolbar, Button } from '@mui/material'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/users'\n\nimport {\n  Switch, Route, useRouteMatch, Link\n} from 'react-router-dom'\n\nimport storage from './utils/storage'\n\n\n\nconst App = () => {\n\n  const [users, setUsers] = useState([])\n  const [blogs, setBlogs] = useState([])\n\n\n  useEffect(() => {\n    userService.getAll().then(users =>\n      setUsers(users)\n    )\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n\n  const [loggedInUser, setLoggedInUser] = useState(null)\n\n  useEffect(() => {\n    const loggedIn = storage.loadUser()\n    setLoggedInUser(loggedIn)\n  }, [])\n\n  const handleLogout = () => {\n    setLoggedInUser(null)\n    storage.logoutUser()\n  }\n\n\n\n  const matchForUser = useRouteMatch('/user/:id')\n  const user = matchForUser ? users.find(user => user.id === String(matchForUser.params.id)) : null\n\n  const matchForBlog = useRouteMatch('/blogs/:id')\n  const blog = matchForBlog ? blogs.find(blog => blog.id === String(matchForBlog.params.id)) : null\n\n  const handleLike = async (id) => {\n    const blogToLike = blogs.find(b => b.id === id)\n\n    if(blogToLike !== undefined) {\n      const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n      await blogService.update(likedBlog)\n      setBlogs(blogs.map(b => b.id === id ?  { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n    }\n  }\n\n  const addComment = async (id, comment) => {\n\n    try {\n      const blogToAddComment = blogs.find(b => b.id === id)\n      const commentedBlog = { ...blogToAddComment, comments: blogToAddComment.comments.concat(comment), user: blogToAddComment.user.id }\n      await blogService.addComment(commentedBlog)\n      setBlogs(blogs.map(b => b.id === id ?  { ...commentedBlog, comments: commentedBlog.comments.concat(comment) } : b))\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n  return (\n    <div>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button color=\"inherit\" component={Link} to=\"/\">\n      Blogs\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/users\">\n      Users\n          </Button>\n          {loggedInUser\n            ? <em>{loggedInUser.name} logged in <button onClick={handleLogout}>logout</button> </em>\n            : ''\n          }\n        </Toolbar>\n      </AppBar>\n\n\n      <h1>Blog app</h1>\n\n\n      <Switch>\n        <Route path=\"/user/:id\">\n          <User user={user} />\n        </Route>\n        <Route path=\"/users\">\n          <Users users={users}/>\n        </Route>\n        <Route path=\"/blogs/:id\">\n          <BlogData blog={blog} handleLike={handleLike} addComment={addComment} />\n        </Route>\n        <Route path=\"/\">\n          <BasicView />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\n\n\nconst BasicView = () => {\n\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const user = storage.loadUser()\n    setUser(user)\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      notifyWith(`${user.name} welcome back!`)\n      storage.saveUser(user)\n    } catch(exception) {\n      notifyWith('wrong username/password', 'error')\n    }\n  }\n\n  const createBlog = async (blog) => {\n    try {\n      const newBlog = await blogService.create(blog)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(newBlog))\n      notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`)\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n\n  /*\n  const handleLike = async (id) => {\n    const blogToLike = blogs.find(b => b.id === id)\n    const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n    await blogService.update(likedBlog)\n    setBlogs(blogs.map(b => b.id === id ?  { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n  }\n\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(b => b.id === id)\n    const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n    if (ok) {\n      await blogService.remove(id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  } */\n\n  if ( !user ) {\n    return (\n      <div>\n\n        <h2>login to application</h2>\n\n        <Notification notification={notification} />\n\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              id='username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              id='password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id='login'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n\n      <Notification notification={notification} />\n\n      <Togglable buttonLabel='create new blog'  ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {blogs.sort(byLikes).map(blog => {\n        return (\n          <li key = {blog.id}> <Link to= {`/blogs/${blog.id}`}>{blog.title} by {blog.author}</Link> </li>\n        )}\n      )}\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'))"],"sourceRoot":""}
{"version":3,"sources":["components/Blog.js","components/Notification.js","components/Togglable.js","components/NewBlog.js","utils/storage.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","handleLike","handleRemove","own","useState","visible","setVisible","label","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","url","likes","id","user","name","Notification","notification","borderStyle","borderRadius","padding","color","type","background","message","Togglable","React","forwardRef","props","ref","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","NewBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","createBlog","value","onChange","target","storageKey","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","baseUrl","getConfig","headers","Authorization","storage","token","axios","get","then","response","data","post","put","delete","login","credentials","a","App","blogs","setBlogs","setUser","username","setUsername","password","setPassword","setNotification","blogFormRef","createRef","useEffect","blogService","notifyWith","setTimeout","handleLogin","loginService","newBlog","current","concat","console","log","blogToLike","find","b","likedBlog","map","blogToRemove","window","confirm","filter","sort","b1","b2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42ee855b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, handleLike, handleRemove, own }) => {\n  const [visible, setVisible] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const label = visible ? 'hide' : 'view'\n\n  return (\n    <div style={blogStyle} className='blog'>\n      <div>\n        <i>{blog.title}</i> by {blog.author} <button onClick={() => setVisible(!visible)}>{label}</button>\n      </div>\n      {visible&&(\n        <div>\n          <div>{blog.url}</div>\n          <div>likes {blog.likes}\n            <button onClick={() => handleLike(blog.id)}>like</button>\n          </div>\n          <div>{blog.user.name}</div>\n          {own&&<button onClick={() => handleRemove(blog.id)}>remove</button>}\n        </div>\n      )}\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n  handleLike: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  own: PropTypes.bool.isRequired\n}\n\nexport default Blog","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if ( !notification ) {\n    return null\n  }\n\n  const style = {\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    color: notification.type === 'success' ? 'green' : 'red',\n    background: 'lightgrey'\n  }\n\n  return <div style={style}>\n    {notification.message}\n  </div>\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst NewBlog = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleNewBlog = (event) => {\n    event.preventDefault()\n\n    props.createBlog({\n      title, author, url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={handleNewBlog}>\n        <div>\n          author\n          <input\n            id='author'\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          title\n          <input\n            id='title'\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          url\n          <input\n            id='url'\n            value={url}\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button id=\"create\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBlog","const storageKey = 'loggedBlogAppUser'\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n  JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n  localStorage.removeItem(storageKey)\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser\n}","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/blogs'\n\nconst getConfig = () => {\n  return {\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (blog) => {\n  const request = axios.post(baseUrl, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst update = (blog) => {\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig())\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport storage from './utils/storage'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const user = storage.loadUser()\n    setUser(user)\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({\n      message, type\n    })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      notifyWith(`${user.name} welcome back!`)\n      storage.saveUser(user)\n    } catch(exception) {\n      notifyWith('wrong username/password', 'error')\n    }\n  }\n\n  const createBlog = async (blog) => {\n    try {\n      const newBlog = await blogService.create(blog)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(newBlog))\n      notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`)\n    } catch(exception) {\n      console.log(exception)\n    }\n  }\n\n  const handleLike = async (id) => {\n    const blogToLike = blogs.find(b => b.id === id)\n    const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n    await blogService.update(likedBlog)\n    setBlogs(blogs.map(b => b.id === id ?  { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n  }\n\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(b => b.id === id)\n    const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n    if (ok) {\n      await blogService.remove(id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    storage.logoutUser()\n  }\n\n  if ( !user ) {\n    return (\n      <div>\n        <h2>login to application</h2>\n\n        <Notification notification={notification} />\n\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              id='username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              id='password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id='login'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification notification={notification} />\n\n      <p>\n        {user.name} logged in <button onClick={handleLogout}>logout</button>\n      </p>\n\n      <Togglable buttonLabel='create new blog'  ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {blogs.sort(byLikes).map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          handleLike={handleLike}\n          handleRemove={handleRemove}\n          own={user.username===blog.user.username}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}